import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

public class EstructurasDeDatos {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		
		/*Acceso posicional a elementos: manipula elementos en función de su posición en la lista.
		Búsqueda de elementos: busca un elemento concreto de la lista y devuelve su posición.
		Rango de operación: permite realizar ciertas operaciones sobre ragos de elementos dentro de la propia lista.
		implementaciones:
		ArrayList
		LinkedList
		*
		*/
		List<String> frutas2 = new ArrayList<String>();
		frutas2.add("Mango");	
		frutas2.add("Manzana");
		frutas2.add("Durazno");
		frutas2.add("Pera");
		frutas2.add("Cereza");
		frutas2.add("Mandarina");
		frutas2.add("Carambola");
		frutas2.add("Maracuya");
		frutas2.add("Platano");
		frutas2.add("Mango");
		
		for (String f : frutas2) {
			System.out.println(f);
		}
		int pera = frutas2.indexOf("Pera"); //Obtenemos el indice
		System.out.println(pera); //Imprimimos el indice
		System.out.println(frutas2.get(pera)); //Obtiene el contenido de ese indice
	
		//ARRAYLIST de enteros: Simplemente enlazado
		//int es un dato primitivo
		//Integer es un objeto
		List<Integer> agenda = new ArrayList<Integer>();
		agenda.add(123);
		agenda.add(456);
		agenda.add(789);
		
		for(Integer a: agenda) {
			System.out.println(a);
		}
		
		
		/*LinkedList. Doblemente enlazado*/
		List <String> animales = new LinkedList<String>();
		animales.add("Perro");
		animales.add("Gato");
		animales.add("Conejo");
		animales.add("Tortuga");
		animales.add("Oso");
		animales.add("Quetzal");
		
		for(String an: animales) {
			System.out.println(an);
		}
		
		/*La interzas Map asocia claves a valores
		 * No puede contener claves duplicadas
		 * Clave sólo puede tener asociado un valor
		 * 
		 * Implementaciones:
		 * HashMap
		 * TreeMap
		 * LinkedHash*/
		
		Map diccionario = new HashMap();
		diccionario.put("Elemento1", "Yann Martinez");
		
		System.out.println(diccionario.get("Elemento1")); //Imprimimos el elemento1
	}

}
